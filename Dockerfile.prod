# By default, Docker runs container processes as root inside of a container. 
# This is a bad practice since attackers can gain root access to the Docker host if they manage to break out of the container.
# If you're root in the container, you'll be root on the host.
# For that reason we are creating a non-root user (app) for production

FROM python:3.8.0-alpine

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# create directory for the app user
RUN mkdir -p /home/app

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# copy and install requirements (using pipenv)
RUN pip install --upgrade pip
RUN pip install pipenv
COPY ./Pipfile $APP_HOME
RUN pipenv install --skip-lock --system --dev

# copy entrypoint.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]

